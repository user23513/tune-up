<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.up.tune.aprv.aprvLine.mapper.AprvLineMapper">

<select id="approvalList" parameterType="co.up.tune.aprv.vo.ApprovalVO" resultType="co.up.tune.aprv.vo.ApprovalVO">
	SELECT *
	FROM APPROVAL
	WHERE APRV_NO = #{aprvNo}
	ORDER APRV_SEQ ASC
</select>


<insert id="approvalIn" parameterType="co.up.tune.aprv.vo.ApprovalVO">
	INSERT INTO APPROVAL
		(APRV_NO, APRVR, APRV_SEQ, APRV_ST)
	VALUES
		(#{aprvNo}, #{aprvr}, #{aprvSeq},
	<if test="aprvSeq == 1 ">'진행'</if>
	<if test="aprvSeq != 1 " >'대기'</if>)
</insert>


<update id="approvalUp" parameterType="co.up.tune.aprv.vo.ApprovalVO">
	UPDATE APPROVAL
	<set>
	<if test="aprvr != null and aprvr != '' " >
	APRVR = #{aprvr},
	</if>
	<if test="aprvDttm != null and aprvDttm != ''">
	APRV_DTTM = #{aprvDttm},
	</if>
	<if test="sign != null and sign != ''">
	SIGN = #{sign},
	</if>
	<if test="aprvSt != null and aprvSt != ''">
	APRV_ST = #{aprvSt},
	</if>
	<if test="aprvSeq != null and aprvSeq != ''">
	APRV_SEQ = #{aprvSeq},
	</if>
	<if test="reject != null and reject != ''">
	REJECT = #{reject}
	</if>
	</set>
	WHERE APRV_NO = #{aprvNo}
			AND APRVR = #{APRVR}
</update>


<delete id="approvalDel" parameterType="co.up.tune.aprv.vo.ApprovalVO">
	DELETE FROM APPROVAL
	WHERE APRV_NO = #{aprvNo}
</delete>



<select id="referList" parameterType="co.up.tune.aprv.vo.ReferVO" resultType="co.up.tune.aprv.vo.ReferVO">
	SELECT *
	FROM REFER
	WHERE APRV_NO = #{aprvNo}
	ORDER BY REFER_NO DESC 
</select>

<insert id="referIn" parameterType="co.up.tune.aprv.vo.ReferVO">
	<selectKey keyProperty="referNo" order="BEFORE" resultType="int">
			SELECT
			CASE WHEN MAX(REFER_NO) IS NULL THEN 1
			ELSE
			MAX(REFER_NO) + 1 END AS NO
			FROM REFER
		</selectKey>
	INSERT INTO REFER
		(REFER_NO, APRV_NO, EMP_NO , REFER_APRV)
	VALUES
		(#{referNo}, #{aprvNo}, #{empNo}, #{referAprv})
</insert>

<update id="referUp" parameterType="co.up.tune.aprv.vo.ReferVO">
	UPDATE REFER
	<set>
		<if test="empNo != null and empNo != ''">
		EMP_NO = #{empNo},
		</if>
		<if test="referNo != null and referNo != ''">
		REFER_NO = #{referNo},
		</if>
		<if test="referAprv != null and referAprv != ''">
		REFER_APRV = #{referAprv}
		</if>
	</set>
	WHERE APRV_NO = #{aprvNo}
		AND REFER_NO = #{referNo}
</update>

<delete id="referDel" parameterType="co.up.tune.aprv.vo.ReferVO">
	DELETE FROM REFER
	WHERE APRV_NO = #{aprvNo}
	<if test="empNo != null and empNo != ''">
		AND EMP_NO = #{empNo}
	</if>
	<if test="referAprv != null and referAprv != ''">
		AND REFER_APRV = #{referAprv}
	</if>
</delete>


<select id="aprvLineList" parameterType="co.up.tune.aprv.vo.AprvLineVO" resultType="co.up.tune.aprv.vo.AprvLineVO">
	SELECT *
	FROM APRV_LINE
	<if test="dept != null and dept != ''">
	WHERE DEPT = #{dept}
		AND EMP_NO = #{empNo}
	</if>
	ORDER BY DECODE(DEF_YN, 'Y', 1, 'N', 2), LINE_NO ASC
</select>

<insert id="aprvLineIn" parameterType="co.up.tune.aprv.vo.AprvLineVO">
	<selectKey keyProperty="lineNo" order="BEFORE" resultType="int">
			SELECT
			CASE WHEN MAX(LINE_NO) IS NULL THEN 1
			ELSE
			MAX(LINE_NO) + 1 END AS NO
			FROM APRV_LINE
		</selectKey>
		INSERT INTO APRV_LINE
				(LINE_NO, DEPT, DEF_YN, EMP_NO, AP1, AP2, AP3)
		VALUES
				(#{lineNo}, #{dept}, #{defYn}, #{empNo}, #{ap1}, #{ap2}, #{ap3} )
</insert>

<update id="aprvLineUp" parameterType="co.up.tune.aprv.vo.AprvLineVO">
	UPDATE APRV_LINE
		<set>
		<if test=" empNo != null and empNo != ''">
		EMP_NO = #{empNo},
		</if>
		<if test="dept != null and dept != ''">
		DEPT = #{dept}
		</if>
		<if test="defYn != null and defYn != ''">
		DEF_YN = #{defYn}
		</if>
		<if test="ap1 != null and ap1 != ''">
		AP1 = #{ap1},
		</if>
		<if test="ap2 != null and ap2 != ''">
		AP2 = #{ap2},
		</if>
		<if test="ap3 != null and ap3 != ''">
		AP3 = #{ap3},
		</if>
		</set>
	WHERE LINE_NO = #{lineNo}
</update>

<delete id="aprvLineDel" parameterType="co.up.tune.aprv.vo.AprvLineVO">
	DELETE FROM APRV_LINE
	WHERE LINE_NO = #{lineNo}
</delete>




</mapper>